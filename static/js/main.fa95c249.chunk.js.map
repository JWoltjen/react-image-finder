{"version":3,"sources":["components/navbar/NavBar.js","components/image-results/ImageResults.js","components/search/Search.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","title","ImageResults","state","open","currentImg","handleOpen","img","setState","handleClose","imageListContent","images","this","props","GridList","cols","map","tags","subtitle","user","actionIcon","onClick","largeImageURL","color","src","id","actions","label","primary","modal","onRequestClose","alt","style","width","Component","Search","searchText","amount","apiUrl","apiKey","onTextChange","e","val","target","value","name","axios","get","then","res","data","hits","catch","err","console","log","onAmountChange","index","onChange","floatingLabelText","fullWidth","primaryText","length","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa95c249.chunk.js","sourcesContent":["import React from 'react'\nimport AppBar from 'material-ui/AppBar'; \n\nconst NavBar = () => <AppBar title=\"PixaBay Image Finder\" /> \n   \n\n\nexport default NavBar","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GridList, GridTile } from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in'; \nimport Dialog from 'material-ui/Dialog'; \nimport FlatButton from 'material-ui/FlatButton'; \n \n class ImageResults extends Component {\n     state = {\n         open: false,\n         currentImg: ''\n     }\n\n     handleOpen = img => {\n         this.setState({open: true, currentImg: img})\n     }\n     handleClose = () => {\n         this.setState({open: false})\n     }\n    render() {\n        let imageListContent; \n        const {images} = this.props; \n\n        if(images) {\n            imageListContent = (\n                <GridList cols={3}>\n                    {images.map(img => (\n                        <GridTile \n                            title={img.tags}\n                            key={img.id}\n                            subtitle={\n                                <span>\n                                    by <strong> {img.user}</strong>\n                                </span>\n                                    }\n                            actionIcon={\n                                <IconButton onClick={() => this.handleOpen(img.largeImageURL)}>\n                                    <ZoomIn color='white' />\n                                </IconButton>\n                            }\n                            >\n                            <img src={img.largeImageURL} />\n                        </GridTile>\n                    ))}\n                </GridList> \n            )\n        } else {\n            imageListContent = null; \n        }\n\n        const actions = [\n            <FlatButton label=\"Close\" primary={true} onClick={this.handleClose} />\n        ]\n        return (\n            <div> \n                {imageListContent}\n                <Dialog \n                    actions={actions}\n                    modal={false}\n                    open={this.state.open}\n                    onRequestClose={this.handleClose}>\n                    <img src={this.state.currentImg} alt='' style={{ width: '100%' }} />\n                </Dialog>\n            </div>\n        )\n    }\n}\nImageResults.propTypes = {\n    images: PropTypes.array.isRequired\n}\n\nexport default ImageResults","import React, { Component } from 'react';\nimport TextField from 'material-ui/TextField'; \nimport SelectField from 'material-ui/SelectField'\nimport MenuItem from 'material-ui/MenuItem'; \nimport axios from 'axios'; \nimport ImageResults from '../image-results/ImageResults'\n\n class Search extends Component {\nstate = {\n    searchText: '', \n    amount: 15, \n    apiUrl: 'https:pixabay.com/api',\n    apiKey: '19432684-51edee1e135caabc3da5f5e96',\n    images: []\n}; \n\nonTextChange = e => {\n    const val = e.target.value; \n    this.setState({ [e.target.name]: val }, () => {\n        if(val === ''){\n         this.setState({images: []})\n        } else {\n\n        axios.get(`${this.state.apiUrl}/?key=${this.state.apiKey}&q=${this.state.searchText}&image_type=photo&per_page=${this.state.amount}&safesearch=true`)\n        .then(res => this.setState({images: res.data.hits}))\n        .catch(err => console.log(err)); \n    }});\n}; \n\nonAmountChange = (e, index, value) => this.setState({amount: value})\n\n\n\n    render() {\n        console.log(this.state.images)\n        return (\n            <div>\n                <TextField\n                    name='searchText'\n                    value={this.state.searchText}\n                    onChange={this.onTextChange}\n                    floatingLabelText=\"Search for Images\"\n                    fullWidth={true}\n                    />\n                    <br/>\n                <SelectField\n                    name=\"amount\"\n                    floatingLabelText=\"amount\"\n                    value={this.state.amount}\n                    onChange={this.onAmountChange}\n                    >\n                    <MenuItem value={5} primaryText='Five' /> \n                    <MenuItem value={10} primaryText='Ten' />\n                    <MenuItem value={15} primaryText=\"Fifteen\" />\n                    <MenuItem value={30} primaryText=\"Thirty\" /> \n                    <MenuItem value={50} primaryText=\"Fifty\" /> \n                </SelectField>\n                <br/>\n                {this.state.images.length > 0 ? (<ImageResults images={this.state.images} />): null}\n            </div>\n        )\n    }\n}\n\nexport default Search;","import NavBar from './components/navbar/NavBar'\nimport Search from './components/search/Search'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\nimport './App.css';\n\nfunction App() {\n  return (\n    <MuiThemeProvider >\n      <div>\n          <NavBar/> \n          <Search /> \n      </div>\n  \n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}